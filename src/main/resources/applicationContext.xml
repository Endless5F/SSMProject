<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd">
    <!-- 开始Spring MVC的注解模式 -->
    <context:component-scan base-package="com.demo"/>
    <mvc:annotation-driven>
        <!-- 解决响应中 中文乱码问题 -->
        <!--        <mvc:message-converters>-->
        <!--            <bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
        <!--                <property name="supportedMediaTypes">-->
        <!--                    <list>-->
        <!--                        <value>text/plain;charset=utf-8</value>-->
        <!--                        <value>text/html;charset=UTF-8</value>-->
        <!--                        <value>application/json;charset=UTF-8</value>-->
        <!--                    </list>-->
        <!--                </property>-->
        <!--            </bean>-->
        <!--        </mvc:message-converters>-->
    </mvc:annotation-driven>
    <context:annotation-config/>
    <mvc:default-servlet-handler/>

    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/demo_db_first?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="rootroot"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="20"/>
    </bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启基于注解的事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- SqlSessionFactoryBean用于根据配置信息创建SqlSessionFactory，不再需要我们编码创建 -->
    <!-- 原生mybatis和spring的整合 -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!-- mapper文件所在的位置 -->
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <!-- mybatis配置文件地址 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- 配置Mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.demo.ssm.mapper"/>
    </bean>

    <!-- 配置kaptcha -->
    <bean name="KaptchaProduccer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <!-- 图片边框 -->
                        <prop key="kaptcha.border">no</prop>
                        <!-- 图片宽 -->
                        <prop key="kaptcha.image.width">120</prop>
                        <!-- 字体颜色 -->
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <!-- 字体大小 -->
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <!-- 验证码长度 -->
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- 开启spring task定时任务注解模式 -->
    <task:annotation-driven/>

    <!-- 激活spring mvc文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
</beans>